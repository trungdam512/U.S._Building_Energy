---
title: "Building Energy Spatial Viz"
format: html
editor: visual
---

```{r, message=FALSE}
library(tidyverse)
library(sf) # tools for working with spatial vector data (GIS functionality, mapping)
library(terra)
library(tidycensus) # spatial data for the US with census information
library(USAboundaries) # access to boundaries for US states, counties, zip codes, and congressional districts
library(tigris)
library(tidyverse)
library(purrr)
```

```{r message=FALSE}
acs2015 <- tidycensus::get_acs(
    year = 2015,
    geography = "state",
    variables = c("B19013_001", "B25003_001", "B25058_001",  "B25003_001", "B25003_002", "B25003_003", "B25077_001", "B25105_001", "B25035_001", "B25024_001", "B25024_002", "B25024_003", "B25024_004", "B25024_005", "B25024_006", "B25024_007", "B25024_008", "B25024_009", "B25024_010"),
    output = "wide",
    geometry = TRUE
) %>%
    rename(
        "medianIncome" = "B19013_001E",
        "medContractRent" = "B25058_001E",
        "tenureTotal" = "B25003_001E",
        "tenureOwned" = "B25003_002E",
        "tenureRented" = "B25003_003E",
        "medianHomeValue"= "B25077_001E",
        "monthHousingCosts" = "B25105_001E",
        "med_year_built" = "B25035_001E",
        "total_units"= "B25024_001E",
        "unit_1_detached" = "B25024_002E",
        "unit_1_attached" = "B25024_003E",
        "unit_2" = "B25024_004E",
        "unit_3_4" = "B25024_005E",
        "unit_5_9" = "B25024_006E",
        "unit_10_19" = "B25024_007E",
        "unit_20_49" ="B25024_008E",
        "unit_50_plus" = "B25024_009E",
        "mobile_home" = "B25024_010E") %>% 
  shift_geometry()

acs2015_agg <- acs2015 %>% 
  mutate(units_2_4 = unit_2 + unit_3_4,
         units_5_plus = unit_5_9 + unit_10_19 + unit_20_49 + unit_50_plus) %>% 
  filter(NAME != "Puerto Rico")


acs2015_agg_region <- acs2015_agg %>% 
  mutate(region = case_when(
    NAME %in% c("Connecticut", "Maine", "Massachusetts", "New Hampshire", "Rhode Island", "Vermont", "New Jersey", "New York", "Pennsylvania") ~ "Northeast",
    NAME %in% c("Illinois", "Indiana", "Michigan", "Ohio", "Wisconsin", "Iowa", "Kansas", "Minnesota", "Missouri", "Nebraska", "North Dakota", "South Dakota") ~ "Midwest",
    NAME %in% c("Delaware", "Florida", "Georgia", "Maryland", "North Carolina", "South Carolina", "Virginia", "District of Columbia", "West Virginia", "Alabama", "Kentucky", "Mississippi", "Tennessee", "Arkansas", "Louisiana", "Oklahoma", "Texas") ~ "South",
    NAME %in% c("Arizona", "Colorado", "Idaho", "Montana", "Nevada", "New Mexico", "Utah", "Wyoming", "Alaska", "California", "Hawaii", "Oregon","Washington") ~ "West",
  ))
  
```

```{r}
# ggplot() +
#   geom_sf(data = acs2015, aes(fill = medContractRent)) +  
#   scale_fill_distiller(palette = "Greens", 
#                        direction = 1) + 
#   labs(title = "Median Rent by State (Utilities Not Included), 2011-2015",
#        caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
#        fill = "ACS estimate") + 
#     ggthemes::theme_map()
# 
# ggplot() +
#   geom_sf(data = acs2015, aes(fill = medianHomeValue)) +
#   scale_fill_distiller(palette = "Greens", 
#                        direction = 1) + 
#   labs(title = "Median Home Value by State, 2011-2015",
#        caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
#        fill = "ACS estimate") + 
#     ggthemes::theme_map()
# 
# 
ggplot() +
  geom_sf(data = acs2015, aes(fill = med_year_built)) +
    scale_fill_distiller(palette = "Greens",
                       direction = 1) +
  labs(title = "Median Year House Was Built by State, 2011-2015",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") +
    ggthemes::theme_map()




ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = unit_1_attached/total_units)) +
      scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
  labs(title = "Proportion of Single Unit Attached Homes, 2011-2015",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") + 
    ggthemes::theme_map()

ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = unit_1_detached/total_units)) +
      scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
  labs(title = "Proportion of Single Unit Detached Homes, 2011-2015",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") + 
    ggthemes::theme_map()


ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = units_2_4/total_units)) +
        scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
  labs(title = "Proportion of 2-4 Unit Homes, 2011-2015",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") + 
    ggthemes::theme_map()


ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = units_5_plus/total_units)) +
        scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
  labs(title = "Proportion of 5+ Unit Homes, 2011-2015",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") + 
    ggthemes::theme_map()

#What's the distribution of owners versus renters?
ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = tenureOwned/tenureTotal)) +
  scale_fill_distiller(palette = "Greens",
                       direction = 1) +
  labs(title = "Proportion Owning",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") +
    ggthemes::theme_map()

ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = tenureRented/tenureTotal)) +
  scale_fill_distiller(palette = "Greens",
                       direction = 1) +
  labs(title = "Proportion Owning",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "ACS estimate") +
    ggthemes::theme_map()

#What's the median age of buildings by state?
ggplot() +
  geom_sf(data = acs2015_agg, aes(fill = med_year_built)) +
    scale_fill_distiller(palette = "Greens",
                       direction = -1) +
  labs(title = "Median Building Age, 2011-2015",
       caption = "Data source: 2011-2015 5-year ACS, US Census Bureau",
       fill = "Median Year Built") +
    ggthemes::theme_map()
```

```{r}
recs <- readRDS("../data/recs_2015_cleaned.RDS")
```

```{r}
recs_housing_type <- recs %>% 
  count(region_name, housing_type) 

region_means <- acs2015_agg_region %>% 
  group_by(region) %>% 
  select(-GEOID, -NAME) %>% 
  summarise_all(mean)

region_geometry <- region_means %>% 
  select(region, geometry)

recs_housing_spatial <- region_geometry %>%
  left_join(recs_housing_type, join_by(region == region_name)) %>% 
  group_by(region) %>% 
  mutate(totalHousing = sum(n),
         typeProportion = n/totalHousing)
```

```{r}
recs_housing_spatial %>% 
  filter(housing_type == "Single family attached") %>% 
  ggplot() +
  geom_sf(aes(fill = typeProportion)) +
      scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
      geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Proportion of Single Unit Attached Homes") + 
    ggthemes::theme_map()

recs_housing_spatial %>% 
  filter(housing_type == "Single family detached") %>% 
  ggplot() +
  geom_sf(aes(fill = typeProportion)) +
      scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
      geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Proportion of Single Unit Detached Homes") + 
    ggthemes::theme_map()

recs_housing_spatial %>% 
  filter(housing_type == "Apt small building") %>% 
ggplot() +
  geom_sf(aes(fill = typeProportion)) +
        scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
      geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Proportion of 2-4 Unit Homes",
       fill = "Propotion of all housing in region") + 
    ggthemes::theme_map()

recs_housing_spatial %>% 
  filter(housing_type == "Apt large building") %>% 
ggplot() +
  geom_sf(aes(fill = typeProportion)) +
        scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
      geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Proportion of 5+ Unit Homes",
       fill = "Propotion of all housing in region") + 
    ggthemes::theme_map()


```

```{r}
recs_temp <- recs %>% 
  count(region_name, elec_warm, elec_cool) %>% 
  mutate(
  #   elec = case_when(
  #   elec_cool =="Yes" & elec_warm == "Yes" ~ "Both",
  #   elec_cool =="No" & elec_warm == "Yes" ~ "Just Warming",
  #   elec_cool =="Yes" & elec_warm == "No" ~ "Just Cooling",
  #   elec_cool =="No" & elec_warm == "No" ~ "Neither"
  # )
    
  )

recs_aircon <-recs %>% 
  count(region_name, aircon) %>% 
  group_by(region_name) %>% 
  mutate(total = sum(n),
         proportion_aircon = n/total) %>% 
  filter(aircon == "Yes")

 recs_aircon_geom <- region_geometry %>%
  left_join(recs_aircon, join_by(region == region_name))
  
```

```{r}
ggplot() +
  geom_sf(data = recs_aircon_geom, aes(fill = proportion_aircon)) +
        scale_fill_distiller(palette = "Blues", 
                       direction = 1) + 
      geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Proportion of Homes with Air Conditioning",
       fill = "Propotion") + 
    ggthemes::theme_map()
```

```{r}
recs_btu <-recs %>% 
  group_by(region_name) %>% 
  summarise(mean_btu = mean(BTUEL)) 

 recs_btu_geom <- region_geometry %>%
  left_join(recs_btu, join_by(region == region_name))
 
 ggplot() +
  geom_sf(data = recs_btu_geom, aes(fill = mean_btu)) +
        scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
       geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Mean Electrity Usage by Region in 2015",
       fill = "Mean Electricity \nUse (thousand \nBtu)") + 
    ggthemes::theme_map()
```

```{r}
recs_btn <-recs %>% 
  group_by(region_name) %>% 
  summarise(mean_btn = mean(BTUNG)) 

 recs_btn_geom <- region_geometry %>%
  left_join(recs_btn, join_by(region == region_name))
 
 ggplot() +
  geom_sf(data = recs_btn_geom, aes(fill = mean_btn)) +
        scale_fill_distiller(palette = "Oranges", 
                       direction = 1) + 
       geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  labs(title = "Mean Natural Gas Usage by Region in 2015",
       fill = "Mean Natural \nGas Use\n(thousand Btu)") + 
    ggthemes::theme_map()
```

```{r}
centers <- st_centroid(acs2015_agg, of_largest_polygon = TRUE)

ggplot() +
  geom_sf(data = recs_btn_geom, aes(fill = mean_btn)) +
        scale_fill_distiller(palette = "Oranges", 
                       direction = 1) + 
  geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  geom_sf(data = centers, aes(size = med_year_built), color = "red") +
  labs(title = "Mean Natural Gas Usage by Region in 2015",
       fill = "Mean Natural \nGas Use\n(thousand Btu)") + 
    ggthemes::theme_map()

```

```{r}
recs_sqft <-recs %>% 
  group_by(region_name) %>% 
  summarise(mean_sqft = mean(TOTSQFT_EN)) 

 recs_sqft_geom <- region_geometry %>%
  left_join(recs_sqft, join_by(region == region_name))
 

ggplot() +
  geom_sf(data = recs_sqft_geom, aes(fill = mean_sqft)) +
        scale_fill_distiller(palette = "Purples", 
                       direction = 1) + 
    geom_sf(data = acs2015_agg, color = "darkgray", fill = NA) +
  geom_sf(data = centers, aes(size = med_year_built), color = "blue") +
  labs(title = "Mean House Square Footage by Region in 2015",
       fill = "Mean Natural \nGas Use\n(thousand Btu)") + 
    ggthemes::theme_map()
```
